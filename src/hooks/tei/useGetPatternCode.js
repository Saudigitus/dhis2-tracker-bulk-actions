import { useDataEngine } from "@dhis2/app-runtime"
import { useContext } from "react";
import { GeneratedVaribles } from "../../contexts/GeneratedVaribles";

export const useGetPatternCode = () => {
    const engine = useDataEngine()
    const { autoGenerated, setautoGenerated } = useContext(GeneratedVaribles)
    let varia = {}

    async function returnPattern(variables, setloadingCode) {
        // eslint-disable-next-line no-unsafe-optional-chaining
        for (const variable of variables) {
            const { pattern, name: id } = variable
            let code = undefined
            if (pattern) {
                const newGen = { ...autoGenerated }
                code = await engine.query({ result: { resource: "trackedEntityAttributes", id: ({ id }) => id } }, { variables: { id: `${id}/generate` } })
                // console.log({ ...newGen, [id]: code.result?.value });
                varia[id] = code.result?.value
                // setautoGenerated({ [id]: code.result?.value })
            }
        }
        setloadingCode(false)
        setautoGenerated(varia);
    }

    return {
        returnPattern
    }

}